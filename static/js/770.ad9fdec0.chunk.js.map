{"version":3,"file":"static/js/770.ad9fdec0.chunk.js","mappings":"8QAEaA,EAAWC,EAAAA,GAAAA,GAAH,8HAQRC,EAAcD,EAAAA,GAAAA,GAAH,0FAMXE,EAAUF,EAAAA,GAAAA,IAAH,wC,SC8BpB,EArCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,GAAM,GAAD,OAPvB,uCAOuB,OAAUP,EAAV,4BARhB,qCAOM,OACVQ,EADU,OAEhBJ,EAAQI,EAAOC,KAAKN,MAFJ,2CAAH,qDAIfG,GACD,GAAE,CAACN,IAECG,EAGe,IAAhBA,EAAKO,QACA,2DAGP,SAACd,EAAD,UACGO,EAAKQ,KAAI,SAAAC,GAAE,OACV,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,IACED,EAAGE,aAAH,yCACsCF,EAAGE,cACrC,wDAENC,IAAKH,EAAGI,QAEV,uBAAIJ,EAAGI,QACP,uCAAeJ,EAAGK,eAVFL,EAAGM,QADX,OAPP,qCAuBV,C","sources":["components/Cast.styled.js","components/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  padding: 0;\n  justify-content: space-between;\n`;\n\nexport const CastElement = styled.li`\n  margin: 10px;\n  list-style: none;\n  width: calc(15% - 20px);\n`;\n\nexport const CastImg = styled.img`\n  width: 100%;\n`;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastElement, CastImg, CastList } from './Cast.styled';\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\nconst api_key = 'cbd8bb6ab7443496075b168356471aed';\nconst url = `https://api.themoviedb.org/3/movie/`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`${url}${movieId}/credits?api_key=${api_key}`);\n      setCast(result.data.cast);\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!cast) {\n    return <b>Loading...</b>;\n  }\n  if (cast.length === 0) {\n    return <p>We don't have any information.</p>\n  }\n  return (\n    <CastList>\n      {cast.map(el => (\n        <CastElement key={el.cast_id}>\n          <CastImg\n            src={\n              el.profile_path\n                ? `https://image.tmdb.org/t/p/w200${el.profile_path}`\n                : 'https://via.placeholder.com/100x150.png?text=No+Image'\n            }\n            alt={el.name}\n          />\n          <p>{el.name}</p>\n          <p>Character: {el.character}</p>\n        </CastElement>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastElement","CastImg","movieId","useParams","useState","cast","setCast","useEffect","fetchData","axios","result","data","length","map","el","src","profile_path","alt","name","character","cast_id"],"sourceRoot":""}