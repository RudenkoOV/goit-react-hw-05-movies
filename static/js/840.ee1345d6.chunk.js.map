{"version":3,"file":"static/js/840.ee1345d6.chunk.js","mappings":"8QAEaA,EAAaC,EAAAA,GAAAA,IAAH,iGAOVC,EAAaD,EAAAA,GAAAA,OAAH,8IAUVE,EAAUF,EAAAA,GAAAA,IAAH,sF,0BCqFpB,EA1FqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KA8BhD,IA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,4HAEOC,EAAAA,EAAAA,GAAM,GAAD,OAXzB,uCAWyB,OAAUb,EAAV,oBAZlB,qCAUM,OAERc,EAFQ,SAUVA,EAAOC,KANTC,EAJY,EAIZA,MACAC,EALY,EAKZA,YACAC,EANY,EAMZA,OACAC,EAPY,EAOZA,SACAC,EARY,EAQZA,aACAC,EATY,EASZA,aAEFjB,EAAU,CACRY,MAAAA,EACAC,YAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,aAAAA,IAjBY,sDAoBdC,MAAM,+BApBQ,8DAAH,qDAwBfV,GACD,GAAE,CAACZ,KAECG,EACH,OAAO,sCAET,IAAMoB,EAAY,IAAIC,KAAKrB,EAAOiB,cAAcK,cAChD,OACE,iCACE,SAAC3B,EAAD,WACE,UAAC,KAAD,CAAM4B,GAAInB,EAASoB,QAAnB,WACA,SAAC,MAAD,IADA,gBAKF,UAAC/B,EAAD,YACE,gBACEgC,IACEzB,EAAOc,YAAP,yCACsCd,EAAOc,aACzC,wDAENY,IAAK1B,EAAOa,SAEd,4BACE,kCAAQb,EAAOa,MAAf,aAAyBO,EAAzB,QACA,yCAAuC,GAAtBpB,EAAOkB,cAAmBS,UAA3C,QACA,qCACE3B,EAAOgB,UAGP,uBAAIhB,EAAOgB,YAFX,2DAIF,mCAC0B,IAAzBhB,EAAOe,OAAOa,QACb,gEAEA,uBAAI5B,EAAOe,OAAOc,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAItD,UAACpC,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM2B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAU,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieBlock = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n  margin-right: 50px;\n`;\n\nexport const ButtonBack = styled.button`\n  margin: 10px;\n  border-radius: 8px;\n  color: blue;\n  background-color: grey;\n  &:hover {\n    scale: 1.3;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin: 10px;\n  border: 2px solid #0af;\n  padding: 10px;\n`;\n","import axios from 'axios';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { TiArrowLeftThick } from 'react-icons/ti';\nimport { AddInfo, ButtonBack, MovieBlock } from './MovieDetails.styled';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nconst api_key = 'cbd8bb6ab7443496075b168356471aed';\nconst url = `https://api.themoviedb.org/3/movie/`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`${url}${movieId}?api_key=${api_key}`);\n        const {\n          title,\n          poster_path,\n          genres,\n          overview,\n          release_date,\n          vote_average,\n        } = result.data;\n        setMovies({\n          title,\n          poster_path,\n          genres,\n          overview,\n          release_date,\n          vote_average,\n        });\n      } catch (error) {\n        alert('Ooops... Something wrong...');\n        throw error;\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!movies) {\n    return <b>Loading...</b>;\n  }\n  const movieDate = new Date(movies.release_date).getFullYear();\n  return (\n    <>\n      <ButtonBack>\n        <Link to={backLink.current}>\n        <TiArrowLeftThick />\n        Go back\n        </Link>\n      </ButtonBack>\n      <MovieBlock>\n        <img\n          src={\n            movies.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movies.poster_path}`\n              : 'https://via.placeholder.com/185x278.png?text=No+Image'\n          }\n          alt={movies.title}\n        />\n        <div>\n          <h1>{`${movies.title} (${movieDate})`}</h1>\n          <p>User Score: {(movies.vote_average * 10).toFixed()}%</p>\n          <h2>Overview</h2>\n          {!movies.overview ? (\n            <p>No overview information found.</p>\n          ) : (\n            <p>{movies.overview}</p>\n          )}\n          <h2>Genres</h2>\n          {movies.genres.length === 0 ? (\n            <p>No information on genres was found.</p>\n          ) : (\n            <p>{movies.genres.map(genre => genre.name).join(', ')}</p>\n          )}\n        </div>\n      </MovieBlock>\n      <AddInfo>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AddInfo>\n      <Suspense fallback={<b> Loading...</b>}>\n        <Outlet />\n      </Suspense>      \n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieBlock","styled","ButtonBack","AddInfo","movieId","useParams","useState","movies","setMovies","location","useLocation","backLink","useRef","state","from","useEffect","fetchData","axios","result","data","title","poster_path","genres","overview","release_date","vote_average","alert","movieDate","Date","getFullYear","to","current","src","alt","toFixed","length","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}